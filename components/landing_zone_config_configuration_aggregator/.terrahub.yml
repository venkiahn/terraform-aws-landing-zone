component:
  name: landing_zone_config_aggregate_authorization
  template:
    locals:
      elements_config_aggregate_authorization_tags_map: >-
        var.${tfvar.terrahub["landing_zone_providers"]["0"]}_provider["landing_zone_config_aggregate_authorization_tags"]
    resource:
      aws_config_aggregate_authorization:
        landing_zone_config_aggregate_authorization:
          provider: 'aws.${tfvar.terrahub["landing_zone_providers"]["0"]}'
          count: >-
            length(var.${tfvar.terrahub["landing_zone_providers"]["0"]}_provider["landing_zone_config_aggregate_authorization_tags"])
          account_id: 'var.${tfvar.terrahub["landing_zone_providers"]["0"]}_account_id'
          region: 'var.${tfvar.terrahub["landing_zone_providers"]["0"]}_region'
          tags: >-
            merge(local.elements_config_aggregate_authorization_tags_map["config_${count.index}"],
            map("LzHash", sha1("${tfvar.terrahub["project"]["code"]}
            ${tfvar.terrahub["component"]["name"]}
            ${tfvar.terrahub["landing_zone_providers"]["0"]} ${count.index}")))
    output:
      arns:
        value: >-
          aws_config_aggregate_authorization.landing_zone_config_aggregate_authorization.*.arn
      landing_zone_config_aggregate_authorization_arns:
        value: >-
          { for config_aggregate_authorization in
          aws_config_aggregate_authorization.landing_zone_config_aggregate_authorization.*:
          lookup(config_aggregate_authorization.tags, "LzHash",
          config_aggregate_authorization.id) =>
          config_aggregate_authorization.arn }
